<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>2.3.0</version>
                <configuration>
                    <!--基础镜像，来自dockerhub,如果是私服，需要加上鉴权信息，和to下的auth节点相同-->
                    <from>
                        <image>172.16.1.103/library/openjdk:8-jdk-alpine</image>
                        <auth>
                            <username>admin</username>
                            <password>Harbor12345</password>
                        </auth>
                    </from>
                    <!--容器相关设置-->
                    <container>
                        <!--创建时间-->
                        <creationTime>${maven.build.timestamp}</creationTime>
                        <!--放置应用程序内容的容器上的根目录-->
                        <appRoot>/deploy/service/${project.artifactId}</appRoot>
                        <!--容器在运行时公开的端口-->
                        <ports>8080</ports>
                        <!--容器中的工作目录-->
                        <workingDirectory>/deploy/service/${project.artifactId}</workingDirectory>
                    </container>
                    <!--构建后的镜像名称以及私服地址、鉴权信息-->
                    <to>
                        <image>172.16.1.103/library/${project.name}:${project.version}</image>
                        <auth>
                            <username>admin</username>
                            <password>Harbor12345</password>
                        </auth>
                    </to>
                    <!--允许非https-->
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
                <!--将jib与mvn构建的生命周期绑定 mvn package自动构造镜像-->
                <!--打包及推送命令 mvn  -DsendCredentialsOverHttp=true clean package-->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>

</plugin>
        </plugins>
    </build>

</project>
